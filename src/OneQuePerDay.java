import java.util.Scanner;
import  java.util.*;
/**
 * @author lupeibei
 * @date 2021/9/13 5:40 下午
 */
//       9/10
//       John是一名打字员，他有一个习惯就是切换大小写时从来不按SHIFT键，而是只用Caps Lock键。
//       老板为了监督John的工作，想统计John每天敲了多少次键盘，让我们编写一个函数来实现这个想法吧。
//
//        备注：输入的是字符串，只包含大小写英文字母。键盘初始默认是小写状态。
//
//        示例：
//        输入：aa，返回2，因为敲了a, a。
//        输入：Aa，返回4，因为敲了Cpas Lock, A, Cpas Lock, a。
//
//        题目难度：简单
//9/11
//已知各个python模块编译的耗时和所依赖模块的信息列表info。其中元素的类型是元组，格式为(模块名，编译耗时，依赖模块名称… )，例如(module3,10,module1,module2)表示module3依赖于module1和module2，且自己编译耗时需要10秒。如果没有依赖则对应值为None，所依赖的多个模块会并发执行编译。
//
//请编写一个函数，输入编译信息列表info和目标模块名称target，求出给定的目标模块target编译所需的最短耗时。一旦模块之间存在循环依赖，或者所依赖的模块不存在，则一律返回-1。
//
//示例1
//输入：info=[("module1", 10, None), ("module2", 5, None),("module3", 10, "module1", "module2")], target="module3"
//输出：20。
//解析：已知目标模块module3自己编译耗时10，另外依赖于module1（耗时10）和module2（耗时5），因此所有依赖的编译最短耗时是10。因此module3总计20秒可以编译完毕。
//
//示例2
//输入：info=[("module1", 10, "module3"), ("module2", 5, None),("module3", 10, "module1")], target="module3"
//输出：-1。
//解析：由于目标模块module3依赖于module1，而module1又依赖于module3，因此是循环依赖，所以无法进行编译，返回结果为 -1。
//
//题目难度：中等
//题目来源：就业班同学面试真题（略作改动）
//9/12
//已知度数是一个非负浮点数，并且满足：1度= 1小时，1分钟=60秒钟。请编写一个函数convert，接收一个度数值degree，以列表的格式返回它所表示的度数、分钟数和秒数。
//备注：所有的度数/分钟数、秒数均取整数部分。
//示例：
//输入：50，输出：[50]。
//输入：40.567，输出[40, 34, 1]。因为0.567度是34.02分钟，取34；0.02分钟是1.2，取1。
//9/13
//给定一个目标整数n，计算0到n之间(不含n自身)，所有是3或者5的倍数的数字之和。例如，我们列举10以内3或者5的倍数的整数，则会得到3，5，6，9。它们的总和是23。
//备注：如果一个数同时是3和5的倍数，则只统计1次。所有数字都是正整数。如果输入的n是负数，则返回0。
//
//示例
//输入：4，输出：3。因为满足条件的数字只有3。
//输入：6，输出：8。因为满足条件的数字是3和5。
public class OneQuePerDay {
    //9/13
    //给定一个目标整数n，计算0到n之间(不含n自身)，所有是3或者5的倍数的数字之和。例如，我们列举10以内3或者5的倍数的整数，则会得到3，5，6，9。它们的总和是23。
    //    //备注：如果一个数同时是3和5的倍数，则只统计1次。所有数字都是正整数。如果输入的n是负数，则返回0。
    //    //
    //    //示例
    //    //输入：4，输出：3。因为满足条件的数字只有3。
    //    //输入：6，输出：8。因为满足条件的数字是3和5。
//    public static void main(String[] args) {
//        Scanner thFi =new Scanner(System.in);
//        int nb =0;
//        if ()
//
//        }
//        System.out.println("请输入一个整数字");
//        int sz = thFi.nextInt();
//        for(int i=0;i>0;i++){
//            if (i/3==0){
//                System.out.println("这是除以3等于0的数哦"+i);
//            }else if (i/5 ==0){
//                System.out.println("这是除以5等于0的数哦"+i);
//            }else {
//                System.out.println("这是啥都不是哦");
//            }
//
//        }
//    }
}
